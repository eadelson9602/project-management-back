name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Lint and format code
        run: |
          yarn lint
          yarn format

      # - name: Run unit tests
      #   run: |
      #     yarn test:unit
      #     yarn test:cov

      # - name: Run integration tests
      #   run: |
      #     yarn test:integration
      #     yarn test:cov

      - name: Generate database migrations
        run: yarn migration:generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run database migrations
        run: yarn migration:run
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      - name: Login to Heroku Container Registry
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Push Docker image to Heroku
        if: github.ref == 'refs/heads/main'
        run: |
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          heroku container:release web -a ${{ secrets.HEROKU_APP_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
